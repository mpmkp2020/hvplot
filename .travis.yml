# We deliberately don't use travis's language=python option because
# we install miniconda and use conda to get python. Additionally,
# Travis's auto-install of python doesn't work on osx images (see
# https://github.com/travis-ci/travis-ci/issues/4729).
language: generic
sudo: false
os:
  - linux

dist: xenial

env:
  global:
    - PYENV_VERSION=3.7
    - PKG_TEST_PYTHON="--test-python=py36 --test-python=py27"
    - CHANS_DEV="-c pyviz/label/dev"
    - CHANS_REL="-c pyviz"
    - LABELS_DEV="--label dev"
    - LABELS_REL="--label dev --label main"
    - PYTHON_VERSION=3.6

stages:
  - test
  - name: docs
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$ OR tag = website
  - name: docs_dev
    if: tag =~ ^v(\d+|\.)+([a-z]|rc)\d+$ OR tag = website_dev OR commit_message =~ /^.*(website_dev).*$/
  - name: dev_package
    if: tag =~ ^v(\d+|\.)+([a-z]|rc)\d+$
  - name: package
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$

jobs:
  include:
    ########## DEVELOPER INSTALL ##########

    - &default
      stage: test
      arch: arm64
      env: DESC="unit test with basic deps" CHANS=$CHANS_REL
      before_install:
        - pip install pyctdev
        - wget -q "https://github.com/conda-forge/miniforge/releases/download/4.8.2-1/Miniforge3-4.8.2-1-Linux-aarch64.sh" -O miniconda.sh
        - chmod +x miniconda.sh
        - ./miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        - doit ecosystem_setup
      install:
        - doit env_create $CHANS_DEV --python=$PYTHON_VERSION || true
        - source activate test-environment
        - conda install pyzmq param holoviews blas beautifulsoup4 bzip2 conda-build  dbus expat filelock fontconfig  glib  glob2  gmp  gst-plugins-base gstreamer hvplot libarchive  libedit liblief libuuid libxcb libxml2 lzo matplotlib ncurses patchelf pcre pkginfo psutil py-lief python-libarchive-c  ripgrep sip soupsieve
        - pip install 'pandoc' 'pyctdev' 'coveralls' 'nose' 'flake8' 'parameterized' 'pytest' 'nbsmoke >=0.2.0' 'colorcet'
        - doit env_capture
      script: doit test_unit

    - &extra_default
      <<: *default
      env: DESC="unit test with extra dependencies" CHANS=$CHANS_REL NAME="extra-deps-env"
      install:
        - doit env_create $CHANS_DEV --python=$PYTHON_VERSION --name=$NAME || true
        - source activate $NAME
        - sudo apt update -y
        - sudo apt-get install libgdal-dev gfortran -y
        #- pip install 'numpy==1.18.4' || true
        #- python -m pip install 'numpy==1.18.4' || true
        #- python3.6 -m pip install 'numpy==1.18.4' || true
        - conda install pyzmq param holoviews blas beautifulsoup4 bzip2 conda-build  dbus expat filelock fontconfig  glib  glob2  gmp  gst-plugins-base gstreamer hvplot libarchive  libedit liblief libuuid libxcb libxml2 lzo matplotlib ncurses patchelf pcre pkginfo psutil py-lief python-libarchive-c  ripgrep sip soupsieve
        - pip install 'pandoc' 'pyctdev' 'coveralls' 'nose' 'flake8' 'parameterized' 'pytest' 'nbsmoke >=0.2.0' 'colorcet'
        - conda install -c numba numba pyarrow retrying	
        - conda install 's3fs' 'scipy' 'pillow' 'selenium' 'dask' 'datashader>=0.6.5' 'notebook>=5.4' pandas asciitree 'networkx' 'streamz>=0.3.0' 'xarray' 'panel' 'numpy==1.18.4'  bokeh lxml
        - which python 
        - which pip
        - which python3.6
        - pip install cython
        - conda install 'numpy==1.18.4'  #to be deleted
        - ls /home/travis/miniconda/envs/extra-deps-env/lib/python3.6/site-packages/
        - conda install -c conda-forge/label/cf202003 'intake' thrift-cpp 
        - pip install 'spatialpandas' 'rasterio'  || true #to be deleted
        - pip install 'intake-parquet' 'intake-xarray' || true

        - doit env_capture
      script: doit test_unit
      after_success: coveralls

    - <<: *extra_default
      env: DESC="test examples with extra dependencies" CHANS=$CHANS_REL NAME="extra-deps-env-notebooks"
      install:
        - doit env_create $CHANS_DEV --python=$PYTHON_VERSION --name=$NAME || true
        - source activate $NAME
        - sudo apt update -y
        - sudo apt install libgraphviz-dev -y
        - sudo apt-get install libgdal-dev -y
        - conda install pyzmq param holoviews blas beautifulsoup4 bzip2 conda-build  dbus expat filelock fontconfig  glib  glob2  gmp  gst-plugins-base gstreamer hvplot libarchive  libedit liblief libuuid libxcb libxml2 lzo matplotlib ncurses patchelf pcre pkginfo psutil py-lief python-libarchive-c  ripgrep sip soupsieve
        - pip install 'pandoc' 'pyctdev' 'coveralls' 'nose' 'flake8' 'parameterized' 'pytest' 'nbsmoke >=0.2.0' 'colorcet'
        #- doit develop_install $CHANS_DEV -o tests -o examples
        - conda install -c numba numba pyarrow retrying	
        - conda install 's3fs' 'scipy' 'pillow' 'selenium' 'dask' 'datashader>=0.6.5' 'notebook>=5.4' pandas asciitree 'networkx' 'streamz>=0.3.0' 'xarray' 'panel' numpy  bokeh lxml
        - python3.6 -m pip install 'spatialpandas' 'rasterio'
        - conda install -c conda-forge/label/cf202003 'intake' thrift-cpp 
        - python3.6 -m pip install 'intake-parquet' 'intake-xarray' 'pygraphviz'
        - conda install -c conda-forge firefox geckodriver
        - doit env_capture
      script:
        - bokeh sampledata
        - doit test_examples_extra
      after_success: true

    - <<: *default
      env: DESC="test flake on code and notebooks" CHANS=$CHANS
      script: doit test_flakes

    ########## DOCS ##########

    - &doc_build
      <<: *default
      stage: docs
      env: DESC="docs" HV_DOC_HTML="true" CHANS=$CHANS_REL
      install:
        - doit env_create $CHANS --python=$PYTHON_VERSION
        - source activate test-environment
        - doit develop_install $CHANS -o doc
        - doit env_capture
      script:
        - conda install -c conda-forge firefox geckodriver 
        - bokeh sampledata
        - nbsite generate-rst --org holoviz --project-name hvplot --skip '^.*homepage.*$'
        - nbsite build --what=html --output=builtdocs
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        local_dir: ./builtdocs
        fqdn: hvplot.pyviz.org
        on:
          tags: true
          all_branches: true

    - <<: *doc_build
      stage: docs_dev
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        local_dir: ./builtdocs
        repo: pyviz-dev/hvplot
        on:
          all_branches: true

    ########## END-USER PACKAGES ##########

    ### CONDA ####

    - &conda_pkg
      <<: *default
      stage: dev_package
      env: DESC="Building conda dev package" CHANS=$CHANS_REL TRAVIS_NOCACHE=$TRAVIS_JOB_ID LABELS=$LABELS_DEV
      install: doit package_build $CHANS $PKG_TEST_PYTHON --test-group=unit
      script: doit package_upload --token=$CONDA_UPLOAD_TOKEN $LABELS

    - <<: *conda_pkg
      stage: package
      env: DESC="Building conda package" CHANS=$CHANS_REL TRAVIS_NOCACHE=$TRAVIS_JOB_ID LABELS=$LABELS_REL

    ### PyPI ###

    - &pip_pkg
      <<: *default
      stage: dev_package
      env: DESC="Building pip dev package" CHANS=$CHANS_REL PYPI=testpypi TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      install:
        - doit env_create $CHANS --python=$PYTHON_VERSION
        - source activate test-environment
        - doit develop_install $CHANS -o tests && pip uninstall -y hvplot
        - doit pip_on_conda
        - doit ecosystem=pip package_build --test-python=py36 --test-group=unit
      script: doit ecosystem=pip package_upload -u $TPPU -p $TPPP --pypi ${PYPI}

    - <<: *pip_pkg
      stage: package
      env: DESC="Building pip package" CHANS=$CHANS_REL PYPI=pypi TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      script: doit ecosystem=pip package_upload -u $PPU -p $PPP --pypi ${PYPI}


notifications:
  email: false
